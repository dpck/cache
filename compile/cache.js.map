{
"version":3,
"file":"compile/cache.js",
"lineCount":373,
"mappings":"A;;;;;;;;AACO,MAAM,CAkBX,WAAAA,CAlBW,CAAA,GAqCTC,OArCG;ACYA,MAAMC,IAAkB,CAACC,CAAD,EAAQC,CAAA,GAAO,CAAf,EAAkBC,CAAA,GAAU,CAAA,CAA5B,CAAAH,IAAsC;AACnE,MAAa,CAAb,KAAIE,CAAJ,IAAkB,CAACC,CAAnB;AACE,WAAOF,CAAP;AADF;AAGMG,GAAAA,GAAaH,CAAAI,MAAA,CACV,IADU,EACJF,CAAA,GAAUD,CAAV,GAAiB,CAAjB,GAAqBI,IAAAA,EADjB,CAAbF;AAEN,SAAID,CAAJ,GAC2BC,CAnBdG,CAmBcH,CAnBRI,OAAND,GAAqB,CAArBA,CAkBb,GAI6BH,CAnBOK,MAAAC,CAmBKR,CAnBLQ,CAoB3BC,KAAA,CAAW,IAAX,CALT;AANmE,CAA9D,EAsBMC,IAAgB,CAACX,CAAD,EAAQY,CAAA,GAAc,CAAA,CAAtB,CAAAD,IACNZ,CAAAc,CAAgBb,CAAhBa,EAAuB,CAAvBA,IAA4BD,CAAA,GAAc,CAAd,GAAkB,CAA9CC,EAvBhB,EA4CMC,IAA0BC,CAADD,IAAU;AAC9C,GAAM,CAAE,OAAQ,CAAE,OAAAE,CAAF,CAAV,CAAN,GAA+BD,CAA/B;AACA,SAAOC,CAAP;AAF8C,CA5CzC;ACZA,MAAM,CAOX,QAAAC,CAPW,CAAA,GAkBTC,EAlBG;ACCP,MAAMC,IAAmB,yBAAzB,EACMC,IAAY,uGADlB,EAGMC,IAAUJ,CAAA,EAHhB,EAYMK,IAActB,CAADsB,IAAoB;AACrC,QAAM,CACJ,OAAAC,CAAA,GAAS,CAAA,CADL,EACY,eAAAC,CAAA,GAAiB,CAAC,SAAD,CAD7B,CAAA,GAES,EAFf,EAGMC,IAAID,CAAAd,KAAA,CAAoB,GAApB,CAHV,EAIMgB,IAAK,IAAIC,MAAJ,CAAWP,CAAAQ,OAAAC,QAAA,CAAyB,iBAAzB,EAA4CJ,CAA5C,CAAX,CAJX;AAMA,SAAOzB,CAAA6B,QAAA,CAAc,KAAd,EAAqB,GAArB,CAAAzB,MAAA,CACE,IADF,CAAA0B,OAAA,CAEGC,CAAA,IAAK;AACLC,KAAAA,GAAcD,CAAAE,MAAA,CAAQd,CAAR,CAAda;AACN,QAAoB,IAApB,KAAIA,CAAJ,IAA4B,CAACA,CAAA,CAAY,CAAZ,CAA7B;AACE,aAAO,CAAA,CAAP;AADF;AAIMC,KAAAA,GAAQD,CAAA,CAAY,CAAZ,CAARC;AAGN,WAAIA,CAAAC,SAAA,CAAe,uCAAf,CAAJ,IACED,CAAAC,SAAA,CAAe,0CAAf,CADF,GAES,CAAA,CAFT,GAKO,CAACR,CAAAS,KAAA,CAAQF,CAAR,CALR;AATW,GAFR,CAAAH,OAAA,CAkBGC,CAAA,IAAKA,CAAAK,KAAA,EAlBR,CAAAC,IAAA,CAmBAN,CAAA,IACCR,CAAJ,GACSQ,CAAAF,QAAA,CAAUV,CAAV,EAA4B,CAACmB,CAAD,EAAIC,CAAJ,CAAA,IAAWD,CAAAT,QAAA,CAAUU,CAAV,EAAcA,CAAAV,QAAA,CAAWR,CAAX,EAAoB,GAApB,CAAd,CAAvC,CADT,GAIOU,CAxBJ,CAAArB,KAAA,CA0BC,IA1BD,CAAP;AAPqC,CAZvC;ACSO8B,QAASA,EAAY,CAACC,CAAD,EAAcC,CAAd,EAA0BC,CAAA,GAAS,CAAA,CAAnC,CAA0C;AA8BpE,SAxBAC,QAAW,CAACC,CAAD,CAAiB;AAC1B,QAAM7B,IAASF,CAAA,CAAuBgC,SAAvB,CAAf,EACM,CAAE,MAAOC,CAAT,CAAA,GAA4BC,KAAJ,EAD9B;AAEA,UAAMC,IH0BgBlD,CAAAkD,CG1BqBF,CH0BrBE,EAAuB,CAAvBA,EAA0B,CAAA,CAA1BA,CG1BtB,EAEMC,IAAU,CADVC,CACU,GADAN,CACA,YAD0BG,KAC1B,IAAUH,CAAAK,QAAV,GAAmCL,CAFnD;AAMMO,KAAAA,GAAe,CHwBiBC,UG1BDH,CH0BCG,EGxBjB,EAEnB,GAHgC,IAG5B,KAHiBrC,CAGjB,IAHoCyB,CAGpC,KAHoDzB,CAGpD,IAAkB2B,CAAlB,GAA2B,CAACD,CAAD,CAA3B,GAA0C,CAC5CO,CAD4C,EAE5CP,CAF4C,CAF3B,CAAAhC,KAAA,CAMd,IANc,CAAf0C;AAQApD,KAAAA,GDgBKsB,CChBG,CAAW8B,CAAX,CAARpD;AAIN,WAA6BsD,MAAAC,OAAA,CAFnBJ,CAAAK,GAAUX,CAAVW,GAA+BR,KAAJ,EAER,EAHVS,CAAEP,QAAAA,CAAFO,EAAWzD,MAAAA,CAAXyD,CAGU,CAA7B;AArB0B,GAwB5B;AA9BoE;A,CCFvDC,QAASA,EAAM,CAAC9C,CAAD,CAAc;AAC1C,MAAM,CAAE,MAAAZ,CAAF,CAAA,GAAgBgD,KAAJ,EAAlB;AACA,QAAMhC,IAASF,CAAA,CAAuBgC,SAAvB,CAAf;AACMJ,GAAAA,GAAa/B,CAAA,CAAcX,CAAd,EAAqBY,CAArB,CAAb8B;AAEN,SAAOF,CAAA,CAAaxB,CAAb,EAAqB0B,CAArB,EAAiC9B,CAAjC,CAAP;AAL0C;A,CCP5C+C,QAASA,EAAkB,CAACpD,CAAD,EAASqD,CAAT,CAAY;AACrC,MAAIA,CAAJ,GAAQrD,CAAR,GAAiB,CAAjB;AACE,UAAUyC,KAAJ,CAAU,+CAAV,CAAN;AADF;AADqC;AAaxBa,cAAeA,EAAW,CAACC,CAAD,EAAK/C,CAAL,EAAWgD,CAAX,CAAyB;AAChE,QAAMC,IAAKN,CAAA,CAAO,CAAA,CAAP,CAAX;AACA,MAAkB,UAAlB,KAAI,MAAOI,EAAX;AACE,UAAUd,KAAJ,CAAU,0BAAV,CAAN;AADF;AAGA,QAAM,CAAE,OAAQiB,CAAV,CAAA,GAAuBH,CAA7B;AACA,MAAI,CAACG,CAAL;AACE,UAAUjB,KAAJ,CAAU,yCAAV,CAAN;AADF;AA0BA,SAtBYkB,MAAM,IAAIC,OAAJ,CAAY,CAACC,CAAD,EAAUC,CAAV,CAAA,IAAoB;AAChD,UAAMzB,IAAK,CAAC0B,CAAD,EAAMJ,CAAN,CAAAtB,IACL0B,CAAJ,IACQC,CACC,GADOP,CAAA,CAAGM,CAAH,CACP,EAAAD,CAAA,CAAOE,CAAP,CAFT,IAIOH,CAAA,CAAQL,CAAR,IAAwBG,CAAxB,CALT;AAQA,QAAIM,IAAU,CAAC5B,CAAD,CAAd;AAEI6B,SAAAC,QAAA,CAAc3D,CAAd,CAAJ,IACEA,CAAA4D,QAAA,CAAa,CAACC,CAAD,EAAMhB,CAAN,CAAA,IAAY;AACvBD,OAAA,CAAmBM,CAAnB,EAA6BL,CAA7B,CAAA;AADuB,KAAzB,CAGA,EAAAY,CAAA,GAAW,CAAC,GAAGzD,CAAJ,EAAU6B,CAAV,CAJb,IAK0C,CAL1C,GAKW6B,KAAAxE,KAAA,CAAW6C,SAAX,CAAAvC,OALX,KAMEoD,CAAA,CAAmBM,CAAnB,EAA6B,CAA7B,CACA,EAAAO,CAAA,GAAU,CAACzD,CAAD,EAAO6B,CAAP,CAPZ,CAAA;AASAkB,KAAA,CAAG,GAAGU,CAAN,CAAA;AApBgD,GAAhC,CAsBlB;AAhCgE;A,CCd3D,MAAM,CAiBX,iBAAAK,CAjBW,EAyCX,MAAAC,CAzCW,CAAA,GAgFTC,EAhFG;ACMP,MAAMC,IAASA,KAAOC,EAAPD,IAAgB;AAC7B,KAAI;AAEF,WADoCE,MAAMrB,CAAA,CAAYiB,CAAZ,EAAmBG,CAAnB,CAC1C;AAFE,GAGF,QAAOX,CAAP,CAAY;AACZ,WAAO,IAAP;AADY;AAJe,CAA/B;ACNO,MAAM,CAGX,QAAAa,CAHW,EAOX,KAAAzE,CAPW,EAWX,SAAA0E,CAXW,EAYX,QAAAhB,CAZW,CAAA,GAeTa,IAfG;ACOP,MAAMI,IAAoBA,KAAM,CAACJ,CAAD,EAAOK,CAAP,CAAND,IAA8B;AAClDC,GAAJ,KACQC,CACN,GADUJ,CAAA,CAAQG,CAAR,CACV,EAAAL,CAAA,GAAOvE,CAAA,CAAK6E,CAAL,EAAQN,CAAR,CAFT;AAIA,MAAIzB,IAAI,MFGKwB,CEHC,CAAOC,CAAP,CAAd;AACIf,GAAAA,GAAMe,CAANf;AACJ,MAAIsB,IAAQ,CAAA,CAAZ;AACA,MAAI,CAAChC,CAAL;AAEE,QADAU,CACI,GADE,MAAMuB,CAAA,CAAaR,CAAb,CACR,EAAA,CAACf,CAAL;AAAU,YAAUlB,KAAJ,CAAU,GAAGiC,CAAH,UAAiBA,CAAjB,oBAAV,CAAN;AAAV;AAFF;AAGO,QAAIzB,CAAAkC,YAAA,EAAJ,CAAqB;AAEtBC,OAAAA,GAAc,CAAA,CAAdA;AACJ,UAAIC,CAAJ;AACKX,OAAAY,SAAA,CAAc,GAAd,CAAL,KACED,CACA,GADU1B,CACV,GADgB,MAAMuB,CAAA,CAAaR,CAAb,CACtB,EAAAU,CAAA,GAAc,CAAA,CAFhB;AAIA,UAAI,CAACC,CAAL,CAAc;AACZ1B,SAAA,GAAM,MAAMuB,CAAA,CAAa/E,CAAA,CAAKuE,CAAL,EAAW,OAAX,CAAb,CAAZ;AACA,YAAI,CAACf,CAAL;AAEE,gBAAUlB,KAAJ,CAAU,GADN2C,CAAAG,GAAc,GAAGb,CAAH,4BAAda,GAAoD,EAC9C,mCAAuCb,CAAvC,EAAV,CAAN;AAFF;AAIAO,SAAA,GAAQ,CAAA,CAAR;AANY;AARY;AAH5B;AAoBA,SAAO,CACLP,KAAMA,CAAAc,WAAA,CAAgB,GAAhB,CAAA,GAAuBX,CAAA,CAAS,EAAT,EAAalB,CAAb,CAAvB,GAA2CA,CAD5C,EAELsB,EAAAA,CAFK,CAAP;AA5BsD,CAAxD,EAkCMC,IAAeA,KAAOR,EAAPQ,IAAgB;AAC/BO,GAAAA,GAAK,GAAGf,CAAH,KAALe;AACJ,MAAIxC,IAAI,MF5BKwB,CE4BC,CAAOgB,CAAP,CAAd;AACKxC,GAAL,KAAQwC,CAAR,GAAa,GAAGA,CAAH,GAAb;AACA,MADuBxC,CACvB,GAD2B,MF7BdwB,CE6BoB,CAAOgB,CAAP,CACjC;AAAO,WAAOA,CAAP;AAAP;AAJmC,CAlCrC;ACPO,MAAM,CAEX,eAAAC,CAFW,CAAA,GAKTC,OALG;ACAA,MAAM,CAMX,SAAAC,EANW,CAAA,GAOTC,MAPG;ACKA,MAAMC,KAAY,CAACC,CAAD,EAAUC,CAAV,CAAAF,IAAsB;AAC7CE,GAAAC,KAAA,CACQ,OADR,EACiBhD,CAAA,IAAK;AAClB8C,KAAAG,KAAA,CAAa,OAAb,EAAsBjD,CAAtB,CAAA;AADkB,GADtB,CAAA;AAIA,SAAO+C,CAAP;AAL6C,CAAxC;ACMQ,KAAMG,GAAN,QAAwBP,GAAxB;AAeb,aAAW,CAACQ,CAAD,CAAU;AACnB,UAAM,CACJ,OAAAC,CAAA,GAAS,CAAA,CADL,EACY,GAAAC,CAAA,GAAK,IADjB,EACuB,GAAGC,CAD1B,CAAA,GAEFH,CAFE,IAES,EAFf,EAIM,CAAE,EAAA3C,CAAA,GAAKN,CAAA,CAAO,CAAA,CAAP,CAAP,EAAqB,WAAAqD,CAArB,CAAA,GAAoCJ,CAApC,IAA+C,EAJrD,EAKMK,IAAO,CAACC,CAAD,EAAIzD,CAAJ,CAAAwD,IAAUhD,CAAA,CAAGR,CAAH,CALvB;AAMA,SAAA,CAA8CsD,CAA9C,CAAA;AACA,QAAAI,EAAA,GAAmB,EAAnB;AACA,QAAAC,EAAA,GAAgB,IAAIhD,OAAJ,CAAY,CAACiD,CAAD,EAAI3F,CAAJ,CAAA,IAAU;AACpC,UAAA4F,GAAA,CAAQ,QAAR,EAAkB,EAAA,IAAM;AACtB,YAAI9B,CAAJ;AACIqB,SAAJ,GACErB,CADF,GACM+B,MAAAC,OAAA,CAAc,IAAAL,EAAd,CADN,GAGE3B,CAHF,GAGqB,IAAA2B,EApCpBxG,KAAA,CAAW,EAAX,CAiCD;AAKA0G,SAAA,CAAE7B,CAAF,CAAA;AACA,YAAA2B,EAAA,GAAmB,EAAnB;AARsB,OAAxB,CAAA;AAUA,UAAAV,KAAA,CAAU,OAAV,EAAoBhD,CAAD,IAAO;AACxB,YAA8B,EAA9B,IAAIA,CAAAxD,MAAAwH,QAAA,CAAgB,IAAhB,CAAJ;AACER,WAAA,GAAOxD,CAAP,EAAA;AADF,cAGO;AACL,gBAAMxD,IXFDsB,CWES,CAAWkC,CAAAxD,MAAX,CAAd;AACAwD,WAAAxD,MAAA,GAAUA,CAAV;AACI+G,WAAJ,IAAgBC,CAAA,GAAOxD,CAAP,EAAhB;AAHK;AADL/B,SAAA,CAAE+B,CAAF,CAAA;AAHsB,OAA1B,CAAA;AAWIqD,OAAJ,IACER,EAAA,CAAU,IAAV,EAAgBQ,CAAhB,CAAAY,KAAA,CAAyB,IAAzB,CADF;AAtBoC,KAAtB,CAAhB;AATmB;AAoCrB,QAAM,CAACC,CAAD,EAAQC,CAAR,EAAkBC,CAAlB,CAA4B;AAChC,QAAAV,EAAAW,KAAA,CAAsBH,CAAtB,CAAA;AACAE,KAAA,EAAA;AAFgC;AAQ9B,OAAU,EAAA;AACZ,WAAO,IAAAT,EAAP;AADY;AA3DD;AA8ER,MAAMW,KAAUA,KAAOC,EAAPD,IAAkC;AACvD,GAAM,CAAE,EAAAE,CAAF,CAAN,GAAoB,IAAItB,EAAJ,CAAc,CAChCG,GAAIkB,CAD4B,EAGhC/D,EAAIN,CAAA,CAAO,CAAA,CAAP,CAH4B,CAAd,CAApB;AAMA,SADYQ,MAAM8D,CAClB;AAPuD,CAAlD;ACnFQC,cAAeA,EAAI,CAAChD,CAAD,CAAO;AACjC4B,GAAAA,GAAKhC,CAAA,CAAiBI,CAAjB,CAAL4B;AAGN,SADY3C,MAAM4D,EAAA,CAAQjB,CAAR,CAClB;AAJuC;A,CCqB1BqB,QAASA,EAAQ,CAACxG,CAAD,EAAKyG,CAAL,CAAyC;AAA5BC,MAAAA,ICfV,CAAC,GAAD,EAAM,MAAN,CDeUA;AAE3C,QAAM9F,IAAI,EAAV;AACA6F,GAAAtG,QAAA,CAAeH,CAAf,EAAmB,CAACO,CAAD,EAAQ,GAAGlB,CAAX,CAAA,IAAoB;AAK/BsH,KAAAA,GADItH,CAAAP,MAAA8H,CAAW,CAAXA,EAAcvH,CAAAR,OAAd+H,GAA4B,CAA5BA,CACAC,OAAA,CAAS,CAACC,CAAD,EAAMC,CAAN,EAAqB7E,CAArB,CAAA,IAA2B;AACtC8E,OAAAA,GAAMN,CAAA,CAAKxE,CAAL,CAAN8E;AACN,UAAMA,CAAAA,CAAN,IAA+BrI,IAAAA,EAA/B,KAAaoI,CAAb;AAA2C,eAAOD,CAAP;AAA3C;AACAA,OAAA,CAAIE,CAAJ,CAAA,GAAWD,CAAX;AACA,aAAOD,CAAP;AAJ4C,KAApC,EAFkCG,EAElC,CAAJN;AAMN/F,KAAAuF,KAAA,CAAOQ,CAAP,CAAA;AAXqC,GAAvC,CAAA;AAaA,SAAO/F,CAAP;AAhBuE;A,CC1BzE,MAAMsG,KAAK,+EAAX,EACMC,KAAM,mEADZ,EAEMC,KAAM,6BAFZ,EAGMC,KAAM,sDAHZ,EASMC,KAAcpH,CAADoH,IACL,CAACJ,EAAD,EAAKC,EAAL,EAAUC,EAAV,EAAeC,EAAf,CAAAR,OAAArE,CAA2B,CAACsE,CAAD,EAAM9G,CAAN,CAAA,IAAa;AAC5CY,GAAAA,GAAI4F,CAAA,CAASxG,CAAT,EAAaE,CAAb,CAAAS,IAAA,CACH4G,CAAA,IAAKA,CAAA,KADF,CAAJ3G;AAEN,SAAO,CAAC,GAAGkG,CAAJ,EAAS,GAAGlG,CAAZ,CAAP;AAHkD,CAAxC4B,EAIT,EAJSA,CAVd;ACYA,MAAMgF,IAAkBA,KAAM,CAACC,CAAD,EAAMC,CAAN,EAAYtC,CAAA,GAAO,EAAnB,CAANoC,IAAgC;AACtD,QAAM,CAAE,OAAAG,CAAF,EAAU,KAAAC,CAAA,GAAO,CAAA,CAAjB,CAAA,GAA2BxC,CAAjC;AACA,MAAMyC,IAAO7I,CAAA,CAAKyI,CAAL,EAAU,cAAV,EAA0BC,CAA1B,CAAb;AACMnE,GAAAA,GAAOvE,CAAA,CAAK6I,CAAL,EAAW,cAAX,CAAPtE;AACN,QAAMzB,IAAI,MVFGwB,CUEG,CAAOC,CAAP,CAAhB;AACA,MAAIzB,CAAJ,CAAO;AACCU,KAAAA,GAAM,MAAMsF,EAAA,CAAUvE,CAAV,EAAgBoE,CAAhB,CAAZnF;AACN,QAAY7D,IAAAA,EAAZ,KAAI6D,CAAJ;AACE,YAAUlB,KAAJ,CAAU,eAAeoC,CAAA,CAAS,EAAT,EAAaH,CAAb,CAAf,0BAAV,CAAN;AADF;AAEK,QAAI,CAACf,CAAAuF,YAAL,IAAwB,CAACH,CAAzB;AACH,YAAUtG,KAAJ,CAAU,uBAAuBkB,CAAAwF,KAAvB,eAA8CN,CAA9C,kBAAV,CAAN;AADG;AAEL,UAAM,CAAE,MAAAO,CAAF,EAAS,QAAAC,CAAT,EAAkB,YAAAC,CAAlB,EAA+B,KAAAH,CAA/B,EAAqC,YAAAD,CAArC,EAAkD,GAAGK,CAArD,CAAA,GAA8D5F,CAApE;AAUA,WAT4C6F,CAC1CJ,MAAOvE,CAAA,CAAS,EAAT,EAAauE,CAAb,CADmCI,EAE1CC,YAAa5E,CAAA,CAAS,EAAT,EAAaH,CAAb,CAF6B8E,EAG1C,GAAIH,CAAA,GAAU,CAAEA,QAAAA,CAAF,CAAV,GAAwB,EAHcG,EAI1CF,YAAAA,CAJ0CE,EAK1C,GAAIL,CAAA,GAAO,CAAEO,QAAS,CAAA,CAAX,CAAP,GAA2B,EALWF,EAM1C,GAAKN,CAAD,GAAwC,EAAxC,GAAe,CAAEA,YAAa,CAAA,CAAf,CANuBM,EAO1C,GAAGD,CAPuCC,CAS5C;AAhBK;AAkBP,MAAW,GAAX,IAAIZ,CAAJ,IAAkB,CAAC3F,CAAnB;AACE,UAAUR,KAAJ,CAAU,2BAA2BoG,CAA3B,aAAV,CAAN;AADF;AAEA,SAAOF,CAAA,CAAgBxI,CAAA,CAAK0D,CAAA,CAAQ+E,CAAR,CAAL,EAAmB,IAAnB,CAAhB,EAA0CC,CAA1C,EAAgDtC,CAAhD,CAAP;AAzBsD,CAAxD,EAiCa0C,KAAYA,KAAM,CAACvE,CAAD,EAAOoE,CAAA,GAAS,EAAhB,CAANG,IAA6B;AACpD,QAAMU,IAAI,MAAMjC,CAAA,CAAKhD,CAAL,CAAhB;AADoD,MAEhDkF,CAFgD,EAE3CP,CAF2C,EAElCC,CAFkC,EAErBH,CAFqB,EAEfI,CAFe;AAGpD,KAAI;AAQF,KAPC,CACC,OAAUK,CADX,EAEC,QAAWP,CAFZ,EAGC,KAAQC,CAHT,EAIC,KAAQH,CAJT,EAKC,GAAGI,CALJ,CAOD,GADIM,IAAAC,MAAA,CAAWH,CAAX,CACJ,GAAAJ,CAAA,GAAOT,CAAAd,OAAA,CAAc,CAACC,CAAD,EAAM8B,CAAN,CAAA,IAAkB;AACrC9B,OAAA,CAAI8B,CAAJ,CAAA,GAAeR,CAAA,CAAKQ,CAAL,CAAf;AACA,aAAO9B,CAAP;AAFqC,KAAhC,EAGJ,EAHI,CAAP;AARE,GAYF,QAAOlE,CAAP,CAAY;AACZ,UAAUtB,KAAJ,CAAU,mBAAmBiC,CAAnB,GAAV,CAAN;AADY;AAGRkE,GAAAA,GAAMhE,CAAA,CAAQF,CAAR,CAANkE;AACFoB,GAAAA,GAAWJ,CAAXI,IAAkBb,CAAlBa;AACJ,MAAI,CAACA,CAAL,CAAe;AAEb,QAAI,CADgBC,MVpDTxF,CUoDe,CAAOtE,CAAA,CAAKyI,CAAL,EAAU,UAAV,CAAP,CAC1B;AAAkB;AAAlB;AACAoB,KAAA,GAAWb,CAAX,GAAkB,UAAlB;AAHa;AAKXC,GAAAA,GAAQjJ,CAAA,CAAKyI,CAAL,EAAUoB,CAAV,CAARZ;AACJ,MAAIvC,CAAJ;AACA,KAAI;AAEF,KADC,CAAE,KAAMA,CAAR,CACD,GADe,MR1BJ/B,CQ0BU,CAAWsE,CAAX,CACrB,GAAAA,CAAA,GAAQvC,CAAR;AAFE,GAGF,QAAO9C,CAAP,CAAY;;AACd,SAAO,CAAEqF,MAAAA,CAAF,EAASC,QAAAA,CAAT,EAAkBC,YAAAA,CAAlB,EAA+BH,KAAM,CAACS,CAAPT,IAAcA,CAA7C,EACLD,YAAa,CAAC,CAACrC,CADV,EAEL,GAAG0C,CAFE,CAAP;AA/BoD,CAjCtD;ACJO,MAAMW,IAAaC,CAAAD,IAAW,OAAAtI,KAAA,CAAauI,CAAb,CAA9B,EAUDC,IAAsBA,KAAM,CAAC1F,CAAD,EAAO2F,CAAP,EAAgBtB,CAAhB,EAAsBD,CAAtB,EAA8BwB,CAAA,GAAO,IAArC,CAANF,IAAoD;AAC9E,QAAMnH,IAAIE,CAAA,EAAV,EACMyF,IAAMhE,CAAA,CAAQF,CAAR,CADZ;AAEM6F,GAAAA,GAAQF,CAAAvI,IAAA,CAAY,KAAO+G,EAAP,IAAgB;AAExC,QADiBnD,CAAA/D,SAAA6I,CAAwB3B,CAAxB2B,CACjB;AAAc,aAAO,CAAEA,SAAU3B,CAAZ,CAAP;AAAd;AAEA,QAjBiC,OAAAjH,KAAA6I,CAgBR5B,CAhBQ4B,CAiBjC;AACE,SAAI;AACF,YAAM,CAAE,KAAMrB,CAAR,CAAA,GAAkB,MToBjBtE,CSpBuB,CAAkB+D,CAAlB,EAAwBnE,CAAxB,CAA9B;AACA,eAAO,CAAE0E,MAAAA,CAAF,EAASsB,QAASJ,CAAlB,CAAP;AAFE,OAGF,QAAOvG,CAAP,CAAY;;AAJhB,UAOO;AC7Ba;AACtB,YAAI,CAAC4G,CAAD,EAAQ9B,CAAR,EAAc,GAAG+B,CAAjB,CAAA,GD6BiC/B,CC7BPhJ,MAAA,CAAW,GAAX,CAA9B;AACI,SAAC8K,CAAAnF,WAAA,CAAiB,GAAjB,CAAL,IAA8BqD,CAA9B,IACE+B,CACA,GADQ,CAAC/B,CAAD,EAAO,GAAG+B,CAAV,CACR,EAAA/B,CAAA,GAAO8B,CAFT,IAME9B,CANF,GAGY8B,CAAAnF,WAAA,CAAiB,GAAjB,CAAL,GAGE,GAAGmF,CAAH,IAAY9B,CAAZ,EAHF,GACE8B,CAJT;AAQA,SAAA,GAAO,CAAE9B,KAAAA,CAAF,EAAQ+B,MAAOA,CAAAzK,KAAA,CAAW,GAAX,CAAf,CAAP;AAVsB;AD8BlB,YAAM,CAAE,KAAM0K,CAAR,EAAW,MAAAD,CAAX,CAAA,GAAqB,CAA3B;AACA,UAAIA,CAAJ,CAAW;AACT,cAAM,CAAE,YAAAnB,CAAF,EAAe,YAAAH,CAAf,CAAA,GAA+B,MD8C9BX,CC9CoC,CAAgBC,CAAhB,EAAqBiC,CAArB,CAA3C;AACM7F,SAAAA,GAAIJ,CAAA,CAAQ6E,CAAR,CAAJzE;AACN,SAAM,CAAE,KAAMoE,CAAR,CAAN,GAAwB,MTUjBtE,CSVuB,CAAkB3E,CAAA,CAAK6E,CAAL,EAAQ4F,CAAR,CAAlB,CAA9B;AACA,eAAO,CAAExB,MAAAA,CAAF,EAASsB,QAASpB,CAAlB,CAAP;AAJS;AAFN;AASP,OAAI;AACF,YAAM,CACJ,MAAAF,CADI,EACG,YAAAK,CADH,EACgB,QAAAJ,CADhB,EACyB,YAAAC,CADzB,EACsC,QAAAI,CADtC,EAC+C,GAAGH,CADlD,CAAA,GAEF,MDqCKZ,CCrCC,CAAgBC,CAAhB,EAAqBC,CAArB,EAA2B,CAAEC,OAAAA,CAAF,CAA3B,CAFV;AAGA,aAAIQ,CAAJ,IAAmBgB,CAAnB,IACEQ,OAAAC,KAAA,CAAa,iEAAb,EAAgFzB,CAAhF,EAA6F5E,CAA7F,CACO,EAAA,IAFT,IAIO,CACL0E,MAAAA,CADK,EACEK,YAAAA,CADF,EACeJ,QAAAA,CADf,EACwBR,KAAMS,CAD9B,EAEL,GAAII,CAAA,GAAU,CAAEA,QAAAA,CAAF,CAAV,GAAwB,EAFvB,EAGL,GAAGH,CAHE,CAJP;AAJE,KAYF,QAAOxF,CAAP,CAAY;AACZ,UAAIgF,CAAJ;AAAU,eAAO,IAAP;AAAV;AACA,YAAM9F,CAAA,CAAEc,CAAF,CAAN;AAFY;AAhC0B,GAA5B,CAARwG;AAqCN,SAAOhJ,CAAC,MAAMqC,OAAAoH,IAAA,CAAYT,CAAZ,CAAPhJ,QAAA,CAAkC0J,OAAlC,CAAP;AAxC8E,CAVzE,EA2DMC,IAASA,KAAM,CAACxG,CAAD,EAAOyG,CAAA,GAAQ,EAAf,EAAmB,CAC7C,YAAAC,CAAA,GAAc,CAAA,CAD+B,EACzB,QAAAC,CAAA,GAAU,CAAA,CADe,EACR,KAAAtC,CAAA,GAAO,CAAA,CADC,EACM,OAAAD,CAAA,GAAS,EADf,EAE7C,QAASwB,CAFoC,CAAA,GAE3B,EAFQ,CAANY,IAEK;AACzB,MAAIxG,CAAJ,IAAYyG,CAAZ;AAAmB,WAAO,EAAP;AAAnB;AACAA,GAAA,CAAMzG,CAAN,CAAA,GAAc,CAAd;AACA,MAAMrD,IAAS,MAAMqG,CAAA,CAAKhD,CAAL,CAArB,EACM2F,IFvDO5B,EEuDG,CAAWpH,CAAX,CADhB;AAEMiK,GAAAA,GAAiBC,EAAA,CAAkBlK,CAAlB,CAAjBiK;AACAE,GAAAA,GAAKJ,CAAA,GAAcf,CAAd,GAAwBA,CAAA9I,OAAA,CAAe2I,CAAf,CAA7BsB;AACAC,GAAAA,GAAKL,CAAA,GAAcE,CAAd,GAA+BA,CAAA/J,OAAA,CAAsB2I,CAAtB,CAApCuB;AAEN,MAAIC,CAAJ;AACA,KAAI;AACF,UAAMC,IAAK,MAAMvB,CAAA,CAAoB1F,CAApB,EAA0B8G,CAA1B,EAA8BzC,CAA9B,EAAoCD,CAApC,EAA4CwB,CAA5C,CAAjB,EACMsB,IAAK,MAAMxB,CAAA,CAAoB1F,CAApB,EAA0B+G,CAA1B,EAA8B1C,CAA9B,EAAoCD,CAApC,EAA4CwB,CAA5C,CADjB;AAEAsB,KAAAxH,QAAA,CAAYyH,CAAD,IAAS;AAClBA,OAAAC,SAAA,GAAe,CAAA,CAAf;AADkB,KAApB,CAAA;AAGAJ,KAAA,GAAO,CAAC,GAAGC,CAAJ,EAAQ,GAAGC,CAAX,CAAP;AANE,GAOF,QAAO7H,CAAP,CAAY;AAEZ,UADAA,CAAApB,QACMoB,GADQ,GAAGW,CAAH,UAAiBX,CAAApB,QAAjB,EACRoB,EAAAA,CAAN;AAFY;AAIRiB,GAAAA,GAAI0G,CAAA5J,IAAA,CAASgG,CAAA,IAAM,EAAE,GAAGA,CAAL,EAAQpI,KAAMgF,CAAd,EAAf,CAAJM;AAiBN,SAdmB+G,MAFHL,CAAAnK,OAAAyK,CACN,CAAC,CAAE,MAAA5C,CAAF,CAAD,CAAA,IAAeA,CAAf,IAAwB,EAAEA,CAAF,IAAW+B,CAAX,CADlBa,CAEShE,OAAA,CACf,KAAM,CAACC,CAAD,EAAM,CAClB,MAAAmB,CADkB,EACX,QAAAM,CADW,EACF,YAAAD,CADE,EACW,KAAAZ,CADX,EACiB,QAASd,EAD1B,CAAN,CAAN,IAC8C;AACpD,QAAI0B,CAAJ,IAAmB4B,CAAnB;AAA4B,aAAOpD,CAAP;AAA5B;AACMgE,KAAAA,GAAS,MAAMhE,CAAfgE;AAEApF,KAAAA,GAAI/E,CADE6B,MAAMuH,CAAA,CAAO9B,CAAP,EAAc+B,CAAd,EAAqB,CAAEC,YAAAA,CAAF,EAAeC,QAAAA,CAAf,EAAwBtC,KAAAA,CAAxB,EAA8BD,OAAAA,CAA9B,EAAsC4B,QAAS7B,CAAT6B,IAAiB3C,EAAvD,CAArB,CACRjG,KAAA,CACHgG,CAAA,IAAM,EACT,GAAGA,CADM,EAETpI,KAAMoI,CAAApI,KAAA,GAASoI,CAAApI,KAAT,GAAkB0J,CAFf,EAGT,GAAI,CAACtB,CAAA2B,YAAD,IAAkBC,CAAlB,GAA4B,CAAEA,QAAAA,CAAF,CAA5B,GAA0C,EAHrC,EADH,CAAJ7C;AAMN,WAAO,CAAC,GAAGoF,CAAJ,EAAY,GAAGpF,CAAf,CAAP;AAVoD,GAF/B,EAapB7B,CAboB,CAczB;AAtCyB,CA7DpB,EAsGMuG,KAAqBlK,CAADkK,IACrB5D,CAAA5F,CAAS,gDAATA,EAA2DV,CAA3DU,CACED,IAAA6B,CAAM+E,CAAA,IAAKA,CAAA,KAAX/E,CAxGP;AEIP,MAAMuI,KAAiBA,KAAOxH,EAAPwH,IAA6B;AAClD,QAAMjJ,IAAIE,CAAA,EAAV;AACA,GAAM,CAAE,KAAM4E,CAAR,CAAN,GAAoB,MXiCPjD,CWjCa,CAAkBJ,CAAlB,CAA1B;AACA,QAAM,CACJ,YAAA0G,CAAA,GAAc,CAAA,CADV,EAEJ,QAAAC,CAAA,GAAU,CAAA,CAFN,EAGJ,KAAAtC,CAAA,GAAO,CAAA,CAHH,EAIJ,OAAAD,CAAA,GAAS,EAJL,CAAA,GC2CqCqD,CACzCd,QAAS,CAAA,CADgCc,EAEzCpD,KAAM,CAAA,CAFmCoD,CD3C3C;AAMA,MAAIC,CAAJ;AACA,KAAI;AACFA,KAAA,GAAW,MAAMlB,CAAA,CAAOnD,CAAP,EAAU,EAAV,EAAc,CAC7BqD,YAAAA,CAD6B,EAChBC,QAAAA,CADgB,EACPtC,KAAAA,CADO,EACDD,OAAAA,CADC,CAAd,CAAjB;AADE,GAGF,QAAO/E,CAAP,CAAY;AACZ,UAAMd,CAAA,CAAEc,CAAF,CAAN;AADY;AA+Bd,SA5BiBqI,CAAA7K,OAAA8K,CAAgB,CAAC,CAAE,SAAA7B,CAAF,EAAY,MAAApB,CAAZ,CAAD,EAAsB/F,CAAtB,CAAA,IAC3BmH,CAAJ,GACa4B,CAAAE,UAAAC,CAAmB,CAAC,CAAE,SAAUC,CAAZ,CAAD,CAAA,IACrBA,CADqB,IACfhC,CADJ+B,CADb,IAIelJ,CAJf,GAMW+I,CAAAE,UAAAG,CAAmB,CAAC,CAAE,MAAOC,CAAT,CAAD,CAAA,IACrBtD,CADqB,IACZsD,CADPD,CANX,IASapJ,CAVEgJ,CAYPvK,IAAA,CAAc6K,CAAD,IAAQ;AAC7B,UAAM,CAAE,MAAAvD,CAAF,EAAS,SAAAoB,CAAT,CAAA,GAAsBmC,CAA5B,EACMC,IAAQR,CAAA7K,OAAA,CACJ,CAAC,CAAE,SAAU8B,CAAZ,EAAe,MAAOqJ,CAAtB,CAAD,CAAA,IAAgC;AACtC,UAAIlC,CAAJ;AAAc,eAAOA,CAAP,IAAmBnH,CAAnB;AAAd;AACA,UAAI+F,CAAJ;AAAW,eAAOA,CAAP,IAAgBsD,CAAhB;AAAX;AAFsC,KAD5B,CAAA5K,IAAA,CAKP,CAAC,CAAE,KAAApC,CAAF,CAAD,CAAA,IAAcA,CALP,CAAA6B,OAAA,CAMJ,CAACsL,CAAD,EAAKxJ,CAAL,EAAQqF,CAAR,CAAA,IAAcA,CAAAzB,QAAA,CAAU4F,CAAV,CAAd,IAA+BxJ,CAN3B,CADd;AASA,WADcyJ,CAAE,GAAGH,CAALG,EAASpN,KAAMkN,CAAfE,CACd;AAV6B,GAArB,CAAAhL,IAAA6H,CAYH,CAAC,CAAE,QAASW,CAAX,EAAiB,GAAGyC,CAApB,CAAD,CAAA,IACCzC,CAAJ,GAAiB,CAAEI,QAASJ,CAAX,EAAiB,GAAGyC,CAApB,CAAjB,GACOA,CAdDpD,CAgBV;AA5CkD,CAApD;A;;;;;AEZA,MAAMqD,KAAS,CACb,MAAS,EADI,EAEb,IAAO,EAFM,EAGb,MAAS,EAHI,EAIb,OAAU,EAJG,EAKb,KAAQ,EALK,EAMb,QAAW,EANE,EAOb,KAAQ,EAPK,EAQb,MAAS,EARI,EASb,KAAQ,EATK,CAAf;AA4BOC,QAASA,EAAC,CAACrF,CAAD,EAASsF,CAAT,CAAgB;AAE/B,SAAA,CADMC,CACN,GADWH,EAAA,CAAOE,CAAP,CACX,IACO,QAAQC,CAAR,IAAcvF,CAAd,SADP,GAAgBA,CAAhB;AAF+B;A,CDxB1B,MAAMwF,KAAc,CAACC,CAAD,EAAcC,CAAd,EAAoBC,CAAA,GAAMzC,OAAAyC,IAA1B,CAAAH,IAA0C;AACnE,QAAMI,IAAQ,EAAd,EACMC,IAAU,EADhB;AAEAH,GAAAlJ,QAAA,CAAcsJ,CAAD,IAAQ;AACdL,KAAA1L,SAAA,CAAqB+L,CAArB,CAAL,IACEF,CAAAlG,KAAA,CAAWoG,CAAX,CADF;AADmB,GAArB,CAAA;AAKAL,GAAAjJ,QAAA,CAAqBsJ,CAAD,IAAQ;AACrBJ,KAAA3L,SAAA,CAAc+L,CAAd,CAAL,IACED,CAAAnG,KAAA,CAAaoG,CAAb,CADF;AAD0B,GAA5B,CAAA;AAOA,MAFgB1N,CAAAwN,CAAAxN,OAEhB,IAFgCA,CAAAyN,CAAAzN,OAEhC;AAAc,WAAO,CAAA,CAAP;AAAd;AACAwN,GAAApJ,QAAA,CAAesJ,CAAD,IAAQ;AACpB,UAAM,CAAE,MAAAtE,CAAF,EAAS,EAAAuE,CAAT,CAAA,GAAmBC,CAAA,CAAeF,CAAf,CAAzB;AACAH,KAAA,CAAIN,CAAA,CAAE,GAAF,EAAO,OAAP,CAAJ,EAAqB7D,CAArB,EAA4BuE,CAA5B,CAAA;AAFoB,GAAtB,CAAA;AAIAF,GAAArJ,QAAA,CAAiBsJ,CAAD,IAAQ;AACtB,UAAM,CAAE,MAAAtE,CAAF,EAAS,EAAAuE,CAAT,CAAA,GAAmBC,CAAA,CAAeF,CAAf,CAAzB;AACAH,KAAA,CAAIN,CAAA,CAAE,GAAF,EAAO,KAAP,CAAJ,EAAmB7D,CAAnB,EAA0BuE,CAA1B,CAAA;AAFsB,GAAxB,CAAA;AAIA,SAAO,CAAA,CAAP;AAxBmE,CAA9D,EA2BDC,IAAkBF,CAADE,IAAQ;AAC7B,QAAM,CAACxE,CAAD,EAAQyE,CAAR,CAAA,GAAgBH,CAAA7N,MAAA,CAAS,GAAT,CAAtB;AACI8N,GAAAA,GAAQ,EAARA;AACAE,GAAJ,KACEF,CADF,GACU,OAAA/L,KAAA,CAAaiM,CAAb,CAAA,GAAqBC,CAAA,IAAIC,IAAJ,CAASC,QAAA,CAASH,CAAT,EAAe,EAAf,CAAT,CAAAC,gBAAA,EAArB,GAAqED,CAD/E;AAGA,SAAO,CAAEzE,MAAAA,CAAF,EAASuE,EAAAA,CAAT,CAAP;AAN6B,CA3BxB,EAoCMM,IAAWA,KAAO7E,EAAP6E,IAERC,CADyBC,MAAM7K,CAAA,CAAYiB,CAAZ,EAAmB6E,CAAnB,CAC/B8E,OACPE,QAAA,EAvCF,EA0CMC,KAAcA,KAAOC,EAAPD,IACZf,MAAM1J,OAAAoH,IAAA,CAAYsD,CAAAxM,IAAA,CAAa,KAAM,CAAC,CAAE,MAAAsH,CAAF,EAAS,KAAAP,CAAT,EAAe,SAAA2B,CAAf,EAAyB,QAAAnB,CAAzB,CAAD,CAAN,IAA8C;AACxF,MAAIR,CAAJ;AAAU,WAAO,GAAGA,CAAH,IAAWQ,CAAX,EAAP;AAAV;AACA,MAAImB,CAAJ;AAAc,WAAOA,CAAP;AAAd;AACM0D,GAAAA,GAAQ,MAAMD,CAAA,CAAS7E,CAAT,CAAd8E;AACN,SAAO,GAAG9E,CAAH,IAAY8E,CAAZ,EAAP;AAJwF,CAA3D,CAAZ,CA3Cd,EAqDMK,KAAUA,KAAO3E,EAAP2E,IAAe;AACpC,QAAMD,IAAW,MD2BJpC,EC3BU,CAAetC,CAAf,CAAvB,EAIM0D,IAAO,MAAMe,EAAA,CAAYC,CAAZ,CAJnB;AAMA,GAAM,CAAE,KAAME,CAAR,CAAN,GAAuB,MZjBV1J,CYiBgB,CAAkB8E,CAAlB,CAA7B;AAGA,SAAO,CAAEsE,MAFMO,MAAMR,CAAA,CAASO,CAAT,CAEd,EAAiBlB,KAAAA,CAAjB,EAAuBgB,EAAAA,CAAvB,CAAP;AAVoC,CArD/B;AEHPI,MAAAC,QAAA,GCMgBC,KAAM,CAAChF,CAAD,EAAMuB,CAAA,GAAQ,EAAd,EAAkBoC,CAAA,GAAMzC,OAAAyC,IAAxB,CAANqB,IAA8C;AACtD7E,GAAAA,GAAUoB,CAAA,CAAMvB,CAAN,CAAVG;AACN,QAAM,CAAE,MAAAmE,CAAF,EAAS,KAAAZ,CAAT,CAAA,GAAkB,MAAMiB,EAAA,CAAQ3E,CAAR,CAA9B;AAEMiF,GAAAA,GAAMvP,CAAA,CAAW,KAAX,CAAAwP,OAAA,CAAyBjF,IAAAkF,UAAA,CAAezB,CAAf,CAAzB,CAAA0B,OAAA,CAAsD,KAAtD,CAANH;AAEN,MAAI,CAAC9E,CAAL;AAAc,WAAO,CACnBP,OAAQ,CAAA,CADW,EACJyF,OAAQ,UADJ,EACgBf,MAAAA,CADhB,EACuBZ,KAAAA,CADvB,EAC6BuB,IAAAA,CAD7B,CAAP;AAAd;AAIA,QAAM,CACJ,MAASK,CADL,EAEJ,KAAQ7B,CAFJ,CAAA,GAGFtD,CAHJ;AAKA,SAAImE,CAAJ,IAAagB,CAAb,GAAkC,CAChC1F,OAAQ,CAAA,CADwB,EACjByF,OAAQ,cADS,EACOf,MAAAA,CADP,EACcZ,KAAAA,CADd,EACoB4B,EAAAA,CADpB,EACkCL,IAAAA,CADlC,CAAlC,GAGmBzB,EAAA+B,CAAY9B,CAAZ8B,EAAyB7B,CAAzB6B,EAA+B5B,CAA/B4B,CACnB,GAAwB,CAAE3F,OAAQ,CAAA,CAAV,EAAgBqF,IAAAA,CAAhB,CAAxB,GAGO,CAAErF,OAAQ,CAAA,CAAV,EAAiB0E,MAAAA,CAAjB,EAAwBZ,KAAAA,CAAxB,EAA8B2B,OAAQ,aAAtC,EAAqDJ,IAAAA,CAArD,CAPP;AAf4D,CDN9D;;",
"sources":["node_modules/crypto/index.js","node_modules/erotic/src/lib.js","node_modules/os/index.js","node_modules/@artdeco/clean-stack/src/index.js","node_modules/erotic/src/callback.js","node_modules/erotic/src/index.js","node_modules/makepromise/src/index.js","node_modules/fs/index.js","node_modules/@wrote/exists/src/index.js","node_modules/path/index.js","node_modules/resolve-dependency/src/index.js","node_modules/module/index.js","node_modules/stream/index.js","node_modules/catchment/src/lib/index.js","node_modules/catchment/src/index.js","node_modules/@wrote/read/src/index.js","node_modules/mismatch/src/index.js","node_modules/@depack/detect/src/index.js","node_modules/fpj/src/index.js","node_modules/static-analysis/src/lib.js","node_modules/@depack/split/src/index.js","node_modules/static-analysis/src/index.js","src/lib.js","node_modules/erte/src/index.js","src/depack.js","src/index.js"],
"sourcesContent":["export default _crypto\nexport const {\n  Certificate,\n  Cipher,\n  Credentials,\n  DEFAULT_ENCODING,\n  Decipher,\n  DiffieHellman,\n  ECDH,\n  Hash,\n  Hmac,\n  Verify,\n  createCipher,\n  createCipheriv,\n  createCredentials,\n  createDecipher,\n  createDecipheriv,\n  createDiffieHellman,\n  createECDH,\n  createHash,\n  createHmac,\n  createSign,\n  createVerify,\n  getCiphers,\n  getCurves,\n  getDiffieHellman,\n  getHashes,\n  pbkdf2,\n  pbkdf2Sync,\n  privateDecrypt,\n  privateEncrypt,\n  pseudoRandomBytes,\n  publicDecrypt,\n  publicEncrypt,\n  randomBytes,\n  randomFill,\n  randomFillSync,\n  timingSafeEqual,\n} = _crypto","const getLastItem = (array) => {\n  const item = array[array.length - 1]\n  return item\n}\nconst getItemsFrom = (array, from) => array.slice(from)\n\n/**\n * Get a segment of the stack string, defaults are from = 0 and oneLine = false.\n * @param {string} stack the stack string\n * @param {number} [from=0] index from which to slice from\n * @param {boolean} [oneLine=false] Whether just first line must be returned\n * @returns {string} A stack segment starting from the specified line.\n */\nexport const getStackSegment = (stack, from = 0, oneLine = false) => {\n  if (from === 0 && !oneLine) {\n    return stack\n  }\n  const splitStack = stack\n    .split('\\n', oneLine ? from + 1 : undefined)\n  if (oneLine) {\n    const line = getLastItem(splitStack)\n    return line\n  } else {\n    const items = getItemsFrom(splitStack, from)\n    return items.join('\\n')\n  }\n}\n\n/**\n * Get the stack trace part of when the erotic function was called. Disregards\n * first two lines.\n * @param {string} stack error's stack\n * @param {boolean} [transparent] trim the top line as well\n * @returns {string} A part of stack\n */\nexport const getEntryStack = (stack, transparent = false) => {\n  const stackSegment = getStackSegment(stack, 2 + (transparent ? 1 : 0))\n  return stackSegment\n}\n\n/**\n * Get stack line of where the callback was called.\n * @param {string} stack Stack string.\n * @returns {string} Stack line.\n */\nexport const getCalleeStackLine = (stack) => {\n  const calleeStackLine = getStackSegment(stack, 2, true)\n  return calleeStackLine\n}\n\nexport const getStackHeading = message => `Error: ${message}`\n\n/**\n * Extract caller from the function's `arguments`.\n * @param {Object} args arguments\n * @returns {!Function} The caller function from `arguments.callee.caller`.\n */\nexport const getCallerFromArguments = (args) => {\n  const { callee: { caller } } = args\n  return caller\n}","export default os\nexport const {\n  EOL,\n  arch,\n  constants,\n  cpus,\n  endianness,\n  freemem,\n  homedir,\n  hostname,\n  loadavg,\n  networkInterfaces,\n  platform,\n  release,\n  tmpdir,\n  totalmem,\n  type,\n  uptime,\n  userInfo,\n} = os","import { homedir } from 'os'\n\nconst extractPathRegex = /\\s+at.*(?:\\(|\\s)(.*)\\)?/\nconst pathRegex = /^(?:(?:(?:node|(?:internal\\/[\\w/]*|.*node_modules\\/(?:IGNORED_MODULES)\\/.*)?\\w+)\\.js:\\d+:\\d+)|native)/\n\nconst homeDir = homedir()\n\n/**\n * Remove internal Node.JS lines from the error stack traces.\n * @param {string} stack The error stack to update.\n * @param {!_cleanStack.Config} [options] Options for the program.\n * @param {boolean} [options.pretty=false] Replace the absolute path to the home directory with the `~`. Default `false`.\n * @param {!Array<string>} [options.ignoredModules=\"\uff3b'pirates'\uff3d\"] Which modules to ignore in the path. Default `\uff3b'pirates'\uff3d`.\n */\nconst cleanStack = (stack, options) => {\n  const {\n    pretty = false, ignoredModules = ['pirates'],\n  } = options || {}\n  const j = ignoredModules.join('|')\n  const re = new RegExp(pathRegex.source.replace('IGNORED_MODULES', j))\n\n  return stack.replace(/\\\\/g, '/')\n    .split('\\n')\n    .filter(x => {\n      const pathMatches = x.match(extractPathRegex)\n      if (pathMatches === null || !pathMatches[1]) {\n        return true\n      }\n\n      const match = pathMatches[1]\n\n      // Electron\n      if (match.includes('.app/Contents/Resources/electron.asar') ||\n        match.includes('.app/Contents/Resources/default_app.asar')) {\n        return false\n      }\n\n      return !re.test(match)\n    })\n    .filter(x => x.trim())\n    .map(x => {\n      if (pretty) {\n        return x.replace(extractPathRegex, (m, p1) => m.replace(p1, p1.replace(homeDir, '~')))\n      }\n\n      return x\n    })\n    .join('\\n')\n}\n\nexport default cleanStack\n\n/* documentary types/index.xml */\n/**\n * @suppress {nonStandardJsDocs}\n * @typedef {_cleanStack.Config} Config Options for the program.\n */\n/**\n * @suppress {nonStandardJsDocs}\n * @typedef {Object} _cleanStack.Config Options for the program.\n * @prop {boolean} [pretty=false] Replace the absolute path to the home directory with the `~`. Default `false`.\n * @prop {!Array<string>} [ignoredModules=\"\uff3b'pirates'\uff3d\"] Which modules to ignore in the path. Default `\uff3b'pirates'\uff3d`.\n */\n","import cleanStack from '@artdeco/clean-stack'\nimport {\n  getCallerFromArguments, getCalleeStackLine, getStackHeading,\n} from './lib'\n\n/**\n * Create a callback.\n * @param {!Function} entryCaller The function which was called at entry.\n * @param {string} entryStack The first line of the error stack to be returned\n * @param {boolean} [shadow=false] Print only entry stack.\n */\nexport function makeCallback(entryCaller, entryStack, shadow = false) {\n  /**\n   * This callback should be called when an asynchronous error occurred.\n   * @param {(string|Error)} messageOrError A message string or an _Error_ object at the point of actual error.\n   * @returns {Error} An error with the updated stack which includes the callee.\n   */\n  function cb(messageOrError) {\n    const caller = getCallerFromArguments(arguments)\n    const { stack: errorStack } = new Error()\n    const calleeStackLine = getCalleeStackLine(errorStack)\n    const isError = messageOrError instanceof Error\n    const message = isError ? messageOrError.message : messageOrError\n\n    const stackHeading = getStackHeading(message)\n    const entryHasCallee = caller !== null && entryCaller === caller\n    const stackMessage = [\n      stackHeading,\n      ...(entryHasCallee || shadow ? [entryStack] : [\n        calleeStackLine,\n        entryStack,\n      ]),\n    ].join('\\n')\n\n    const stack = cleanStack(stackMessage)\n    const properties = { message, stack }\n    const e = isError ? messageOrError : new Error()\n\n    return /** @type {Error} */ (Object.assign(/** @type {!Object} */ (e), properties))\n  }\n\n  return cb\n}","import {\n  getEntryStack, getCallerFromArguments,\n} from './lib'\nimport { makeCallback } from './callback'\n\n/**\n * Returns a function to create an error with a stack trace starting at the line in code when the call was made by the callee.\n * @param {boolean} [transparent] Pretend as if the call to the function lead to the error, without exposing any of the internal stack.\n */\nexport default function erotic(transparent) {\n  const { stack } = new Error()\n  const caller = getCallerFromArguments(arguments)\n  const entryStack = getEntryStack(stack, transparent)\n\n  return makeCallback(caller, entryStack, transparent)\n}","import erotic from 'erotic'\n\nfunction checkArgumentIndex(length, i) {\n  if (i > length - 2) {\n    throw new Error('Function does not accept that many arguments.')\n  }\n}\n\n/**\n * Get a promise from a function which otherwise accepts a callback.\n * @param {Function} fn A function to promisify.\n * @param {*|Array<*>} [args] An array of arguments to use in the call, or a single argument.\n * @param {*} [resolveValue] A value to override the value with which the promise will be resolved.\n * @returns {Promise<*>} A promise resolved on callback invocation without an error and rejected on callback called with an error.\n */\nexport default async function makePromise(fn, args, resolveValue) {\n  const er = erotic(true)\n  if (typeof fn !== 'function') {\n    throw new Error('Function must be passed.')\n  }\n  const { length: fnLength } = fn\n  if (!fnLength) {\n    throw new Error('Function does not accept any arguments.')\n  }\n\n  const res = await new Promise((resolve, reject)=> {\n    const cb = (err, res) => {\n      if (err) {\n        const error = er(err)\n        return reject(error)\n      }\n      return resolve(resolveValue || res)\n    }\n\n    let allArgs = [cb]\n\n    if (Array.isArray(args)) {\n      args.forEach((arg, i) => {\n        checkArgumentIndex(fnLength, i)\n      })\n      allArgs =  [...args, cb]\n    } else if (Array.from(arguments).length > 1) { // args passed as a single argument, not array\n      checkArgumentIndex(fnLength, 0)\n      allArgs = [args, cb]\n    }\n    fn(...allArgs)\n  })\n  return res\n}","export default fs\nexport const {\n  ReadStream,\n  Stats,\n  WriteStream,\n  access,\n  accessSync,\n  appendFile,\n  appendFileSync,\n  chmod,\n  chmodSync,\n  chown,\n  chownSync,\n  close,\n  closeSync,\n  constants,\n  copyFile,\n  copyFileSync,\n  createReadStream,\n  createWriteStream,\n  exists,\n  existsSync,\n  fchmod,\n  fchmodSync,\n  fchown,\n  fchownSync,\n  fdatasync,\n  fdatasyncSync,\n  fstat,\n  fstatSync,\n  fsync,\n  fsyncSync,\n  ftruncate,\n  ftruncateSync,\n  futimes,\n  futimesSync,\n  lchmod,\n  lchmodSync,\n  lchown,\n  lchownSync,\n  link,\n  linkSync,\n  lstat,\n  lstatSync,\n  mkdir,\n  mkdirSync,\n  mkdtemp,\n  mkdtempSync,\n  open,\n  openSync,\n  read,\n  readFile,\n  readFileSync,\n  readSync,\n  readdir,\n  readdirSync,\n  readlink,\n  readlinkSync,\n  realpath,\n  realpathSync,\n  rename,\n  renameSync,\n  rmdir,\n  rmdirSync,\n  stat,\n  statSync,\n  symlink,\n  symlinkSync,\n  truncate,\n  truncateSync,\n  unlink,\n  unlinkSync,\n  unwatchFile,\n  utimes,\n  utimesSync,\n  watch,\n  watchFile,\n  write,\n  writeFile,\n  writeFileSync,\n  writeSync,\n} = fs","import makePromise from 'makepromise'\nimport { lstat } from 'fs'\n\n/**\n * Check If The File Or Directory Exists, And Return Stats.\n * @param {string} path The path to check for existence.\n */\nconst exists = async (path) => {\n  try {\n    const ls = /** @type {fs.Stats} */ (await makePromise(lstat, path))\n    return ls\n  } catch (err) {\n    return null\n  }\n}\n\nexport default exists\n\n/**\n * @suppress {nonStandardJsDocs}\n * @typedef {import('fs').Stats} fs.Stats\n */","export default path\nexport const {\n  basename,\n  delimiter,\n  dirname,\n  extname,\n  format,\n  isAbsolute,\n  join,\n  normalize,\n  parse,\n  posix,\n  relative,\n  resolve,\n  sep,\n  win32,\n} = path","import exists from '@wrote/exists'\nimport { dirname, join, relative } from 'path'\n\n/**\n * For the given local path that can omit the JS/JSX extension and point to a directory (e.g., `./lib` or `./lib/example`), find that file on the filesystem.\n * @param {string} path The dependency path, to resolve e.g., `./lib`.\n * @param {string} [relativeFrom] The optional path of the file that imports the given path.\n */\nconst resolveDependency = async (path, relativeFrom) => {\n  if (relativeFrom) {\n    const d = dirname(relativeFrom)\n    path = join(d, path)\n  }\n  let e = await exists(path)\n  let res = path\n  let isDir = false\n  if (!e) {\n    res = await checkSources(path)\n    if (!res) throw new Error(`${path}.js or ${path}.jsx is not found.`)\n  } else if (e.isDirectory()) {\n    // first try file\n    let fileChecked = false\n    let fileRes\n    if (!path.endsWith('/')) {\n      fileRes = res = await checkSources(path)\n      fileChecked = true\n    }\n    if (!fileRes) {\n      res = await checkSources(join(path, 'index'))\n      if (!res) {\n        const s = fileChecked ? `${path}.jsx? does not exist, and ` : ''\n        throw new Error(`${s}index.jsx? file is not found in ${path}`)\n      }\n      isDir = true\n    }\n  }\n  return {\n    path: path.startsWith('.') ? relative('', res) : res,\n    isDir,\n  }\n}\n\nconst checkSources = async (path) => {\n  let pp = `${path}.js`\n  let e = await exists(pp)\n  if (!e) pp = `${pp}x`; e = await exists(pp)\n  if (e) return pp\n}\n\nexport default resolveDependency","export default _module\nexport const {\n  Module,\n  builtinModules,\n  runMain,\n  wrap,\n} = _module","export default stream\nexport const {\n  Duplex,\n  PassThrough,\n  Readable,\n  Stream,\n  Transform,\n  Writable,\n} = stream","/**\n * Listens for the `error` event once so that when an error in _streamB_ is emitted, is is also emitted in the _streamA_.\n * @param {stream.Stream} streamA The stream that will emit an error once it's caught in the `streamB`.\n * @param {stream.Stream} streamB The stream from which the error originates.\n * @returns The stream the error is listened on, i.e., transparent to calling the `.once` method on that stream.\n */\nexport const pipeError = (streamA, streamB) => {\n  streamB\n    .once('error', e => {\n      streamA.emit('error', e)\n    })\n  return streamB\n}\n\n/**\n * @suppress {nonStandardJsDocs}\n * @typedef {import('stream').Stream} stream.Stream\n */","import { Writable } from 'stream'\nimport erotic from 'erotic'\nimport cleanStack from '@artdeco/clean-stack'\nimport { pipeError } from './lib'\n\nfunction joinBufferData(array) {\n  return array.join('')\n}\n\n/**\n * A writable stream which collects incoming data into memory, and provides a promise to way for the stream to finish. The promise is resolved with joined chunks.\n */\nexport default class Catchment extends Writable {\n  /**\n   * Create a new catchment to pipe a readable stream into and collect all emitted data.\n   * @param {!_catchment.Options} [options] Options to pass to the `Writable` super constructor, and others shown below.\n   * @param {!stream.Readable} [options.rs] A readable stream to automatically pipe into the catchment. If an error occurs during reading of this stream, the catchment promise will be rejected with it.\n   * @param {boolean} [options.binary=false] Whether to return a raw buffer instead of a string. The string is created by joining all incoming chunks together with `.join('')` method. Default `false`.\n   * @example\n   *\n   * import { createReadStream } from 'fs'\n   * import Catchment from 'catchment'\n   *\n   * const rs = createReadStream('file.txt')\n   * const { promise } = new Catchment({ rs })\n   * const res = await promise\n   */\n  constructor(options) {\n    const {\n      binary = false, rs = null, ...opts\n    } = options || {}\n    /** @suppress {missingProperties} */\n    const { er = erotic(true), proxyError } = options || {}\n    const wrap = (_, e) => er(e)\n    super(/** @type {!stream.WritableOptions} */ (opts))\n    this._caughtData = []\n    this._promise = new Promise((r, j) => {\n      this.on('finish', () => {\n        let d\n        if (binary) {\n          d = Buffer.concat(this._caughtData)\n        } else {\n          d = joinBufferData(this._caughtData)\n        }\n        r(d)\n        this._caughtData = []\n      })\n      this.once('error', (e) => {\n        if (e.stack.indexOf('\\n') == -1) {\n          wrap`${e}`\n          j(e)\n        } else {\n          const stack = cleanStack(e.stack)\n          e.stack = stack\n          if (proxyError) wrap`${e}`\n          j(e)\n        }\n      })\n      if (rs) {\n        pipeError(this, rs).pipe(this)\n      }\n    })\n  }\n  _write(chunk, encoding, callback) {\n    this._caughtData.push(chunk)\n    callback()\n  }\n  /**\n   * A promise which will resolve will all data when the stream finishes.\n   * @type {Promise<string|Buffer>}\n   */\n  get promise() {\n    return this._promise\n  }\n}\n\n/**\n * Collect data into a catchment, and return results when the stream finishes.\n * @param {stream.Readable} readable A readable stream to collect all data from. If an error occurs during reading of this stream, the promise will be rejected with it.\n * @param {_catchment.CollectOptions} options Options when collecting data into a catchment. They can extend `Writable` options which will be passed to the `Catchment` constructor.\n * @param {boolean} [options.binary=false] Whether to return a raw buffer instead of a string. The string is created by joining all incoming chunks together with `.join('')` method. Default `false`.\n * @param {boolean} [options.proxyError=false] Sets whether an error emitted by the stream with have its stack start at the line where the `collect` was called rather than inside of the stream. In other words, hides the implementation of the stream. Default `false`.\n * @example\n *\n * import { collect } from 'catchment'\n * import { createReadStream } from 'fs'\n *\n * const rs = createReadStream(path)\n * await collect(rs, { proxyError: true })\n */\nexport const collect = async (readable, options = {}) => {\n  const { promise } = new Catchment({\n    rs: readable,\n    ...options,\n    er: erotic(true),\n  })\n  const res = await promise\n  return res\n}\n\n/* typal types/index.xml */\n/**\n * @suppress {nonStandardJsDocs}\n * @typedef {_catchment.Options} Options Options to pass to the `Writable` super constructor, and others shown below.\n */\n/**\n * @suppress {nonStandardJsDocs}\n * @typedef {Object} _catchment.Options Options to pass to the `Writable` super constructor, and others shown below.\n * @prop {!stream.Readable} [rs] A readable stream to automatically pipe into the catchment. If an error occurs during reading of this stream, the catchment promise will be rejected with it.\n * @prop {boolean} [binary=false] Whether to return a raw buffer instead of a string. The string is created by joining all incoming chunks together with `.join('')` method. Default `false`.\n */\n/**\n * @suppress {nonStandardJsDocs}\n * @typedef {import('stream').Readable} stream.Readable\n */\n\n/* typal types/collect.xml */\n/**\n * @suppress {nonStandardJsDocs}\n * @typedef {_catchment.CollectOptions} CollectOptions Options when collecting data into a catchment. They can extend `Writable` options which will be passed to the `Catchment` constructor.\n */\n/**\n * @suppress {nonStandardJsDocs}\n * @typedef {Object} _catchment.CollectOptions Options when collecting data into a catchment. They can extend `Writable` options which will be passed to the `Catchment` constructor.\n * @prop {boolean} [binary=false] Whether to return a raw buffer instead of a string. The string is created by joining all incoming chunks together with `.join('')` method. Default `false`.\n * @prop {boolean} [proxyError=false] Sets whether an error emitted by the stream with have its stack start at the line where the `collect` was called rather than inside of the stream. In other words, hides the implementation of the stream. Default `false`.\n */\n","import { createReadStream } from 'fs'\nimport { collect } from 'catchment'\n\n/**\n * Read a file.\n * @param {string} path The path to the file to read.\n */\nexport default async function read(path) {\n  const rs = createReadStream(path)\n  /** @type {string} */\n  const res = await collect(rs)\n  return res\n}\n\n/**\n * Read a file as a buffer.\n * @param {string} path The path to the file to read.\n */\nexport async function readBuffer(path) {\n  const rs = createReadStream(path)\n  /** @type {Buffer} */\n  const res = await collect(rs, { binary: true })\n  return res\n}","/**\n * Returns an array of captured groups of a regular expression as objects. Does not modify the `lastIndex` property of the regex.\n * @param {RegExp} re The regular expression used for matching.\n * @param {string} string String to find matches in.\n * @param {Array<string>} keys Keys to use to create an captured group object.\n * @param {boolean} addPositions Whether to include positions in the return.\n * @example\n *\n```js\nconst re = /(test) inside of a (string)(\\d)?/ig\nconst s = 'Test inside of a STRING1. TEST inside of a string.'\nconst keys = ['test', 'string', 'number']\nconst res = mismatch(re, s, keys)\n\n// result:\n[\n {\n   test: 'Test',\n   string: 'STRING',\n   number: '1',\n },\n {\n   test: 'TEST',\n   string: 'string',\n },\n]\n```\n */\nexport default function mismatch(re, string, keys, addPositions = false) {\n  /** @type {!Array<!Object<string, string>>} */\n  const m = []\n  string.replace(re, (match, ...args) => {\n    // remove position and input\n    const position = args[args.length - 2]\n    const start = addPositions ? { position } : {}\n    const p = args.slice(0, args.length - 2)\n    const o = p.reduce((acc, capturedGroup, i) => {\n      const key = keys[i]\n      if (!(key && capturedGroup !== undefined)) return acc\n      acc[key] = capturedGroup\n      return acc\n    }, start)\n    m.push(o)\n  })\n  return m\n}","import mismatch from 'mismatch'\n\nconst RE = /^ *import(?:\\s+(?:[^\\s,]+)\\s*,?)?(?:\\s*{(?:[^}]+)})?\\s+from\\s+(['\"])(.+?)\\1/gm\nconst RE2 = /^ *import\\s+(?:.+?\\s*,\\s*)?\\*\\s+as\\s+.+?\\s+from\\s+(['\"])(.+?)\\1/gm\nconst RE3 = /^ *import\\s+(['\"])(.+?)\\1/gm\nconst RE4 = /^ *export\\s+(?:{[^}]+?}|\\*)\\s+from\\s+(['\"])(.+?)\\1/gm\n\n/**\n * Returns the names of the modules imported with `import` and `export` statements.\n * @param {string} source The source to detect matches in.\n */\nconst getMatches = (source) => {\n  const res = [RE, RE2, RE3, RE4].reduce((acc, re) => {\n    const m = mismatch(re, source, ['q', 'from'])\n      .map(a => a['from'])\n    return [...acc, ...m]\n  }, [])\n  return res\n}\n\nexport default getMatches\n\nexport const RES = {\n  RE, RE2, RE3, RE4,\n}","import { join, relative, resolve, dirname } from 'path'\nimport exists from '@wrote/exists'\nimport read from '@wrote/read'\nimport resolveDep from 'resolve-dependency'\n\n/**\n * Finds the location of the `package.json` for the given dependency in the directory, and its entry file.\n * @param {string} dir The path to the directory where the requiring file is located.\n * @param {string} name The name of the required package.\n * @param {!_fpj.Config} opts The options for `fpj`.\n * @param {!Array<string>} [opts.fields] Any additional fields from `package.json` file to return.\n * @param {boolean} [opts.soft=false] If the entry export (main or module) does not exist, `soft` mode will not throw an error, but add the `hasEntry` property to the output set to _false_. Default `false`.\n * @returns {!Promise<!_fpj.Return>}\n */\nconst findPackageJson = async (dir, name, opts = {}) => {\n  const { fields, soft = false } = opts\n  const fold = join(dir, 'node_modules', name)\n  const path = join(fold, 'package.json')\n  const e = await exists(path)\n  if (e) {\n    const res = await findEntry(path, fields)\n    if (res === undefined)\n      throw new Error(`The package ${relative('', path)} does export the module.`)\n    else if (!res.entryExists && !soft)\n      throw new Error(`The exported module ${res.main} in package ${name} does not exist.`)\n    const { entry, version, packageName, main, entryExists, ...rest } = res\n    const result = /** @type {!_fpj.Return} */ ({\n      entry: relative('', entry),\n      packageJson: relative('', path),\n      ...(version ? { version } : {}),\n      packageName,\n      ...(main ? { hasMain: true } : {}),\n      ...(!entryExists ? { entryExists: false } : {}),\n      ...rest,\n    })\n    return result\n  }\n  if (dir == '/' && !e)\n    throw new Error(`Package.json for module ${name} not found.`)\n  return findPackageJson(join(resolve(dir), '..'), name, opts)\n}\n\n/**\n * Finds the path to the entry based on package.json file.\n * @param {string} path\n * @param {!Array<string>} fields\n */\nexport const findEntry = async (path, fields = []) => {\n  const f = await read(path)\n  let mod, version, packageName, main, rest\n  try {\n    ({\n      'module': mod,\n      'version': version,\n      'name': packageName,\n      'main': main,\n      ...rest\n    } = JSON.parse(f))\n    rest = fields.reduce((acc, current) => {\n      acc[current] = rest[current]\n      return acc\n    }, {})\n  } catch (err) {\n    throw new Error(`Could not parse ${path}.`)\n  }\n  const dir = dirname(path)\n  let resolved = mod || main\n  if (!resolved) {\n    const indexExists = await exists(join(dir, 'index.js'))\n    if (!indexExists) return undefined\n    resolved = main = 'index.js'\n  }\n  let entry = join(dir, resolved)\n  let r\n  try {\n    ({ path: r } = await resolveDep(entry))\n    entry = r\n  } catch (err) {/* does not exist */}\n  return { entry, version, packageName, main: !mod && main,\n    entryExists: !!r,\n    ...rest }\n}\n\nexport default findPackageJson\n\n/* documentary types/index.xml */\n/**\n * @suppress {nonStandardJsDocs}\n * @typedef {_fpj.Config} Config The options for `fpj`.\n */\n/**\n * @suppress {nonStandardJsDocs}\n * @typedef {Object} _fpj.Config The options for `fpj`.\n * @prop {!Array<string>} [fields] Any additional fields from `package.json` file to return.\n * @prop {boolean} [soft=false] If the entry export (main or module) does not exist, `soft` mode will not throw an error, but add the `hasEntry` property to the output set to _false_. Default `false`.\n */\n/**\n * @suppress {nonStandardJsDocs}\n * @typedef {_fpj.Return} Return The return type of the program.\n */\n/**\n * @suppress {nonStandardJsDocs}\n * @typedef {Object} _fpj.Return The return type of the program.\n * @prop {string} entry The location of the package's entry file. The preference is given to the `module` field.\n * @prop {string} packageJson The path to the package.json file itself.\n * @prop {string} packageName The name of the resolved package.\n * @prop {string} [version] The version of the package.\n * @prop {boolean} [hasMain] Whether the entry is the `main` rather than `module`.\n * @prop {boolean} [entryExists] In soft mode, will be set to `false` if the entry file does not exist.\n */\n","import { dirname, join } from 'path'\nimport { builtinModules } from 'module'\nimport read from '@wrote/read'\nimport resolveDependency from 'resolve-dependency'\nimport getMatches from '@depack/detect'\nimport split from '@depack/split'\nimport findPackageJson from 'fpj'\nimport mismatch from 'mismatch'\nimport erotic from 'erotic'\n\nexport const checkIfLib = modName => /^[./]/.test(modName)\n\n/**\n * Expands the dependency match to include `package.json` and entry paths.\n * @param {string} path The path to the file.\n * @param {!Array<string>} matches The matches.\n * @param {boolean} [soft] Whether to throw when a dependency's package.json is not found.\n * @param {!Array<string>} [fields] What additional fields to fetch from package.json.\n * @returns {!Promise<!Array<!_staticAnalysis.DependencyMeta>>}\n */\nconst getDependenciesMeta = async (path, matches, soft, fields, pckg = null) => {\n  const e = erotic()\n  const dir = dirname(path)\n  const proms = matches.map(async (name) => {\n    const internal = builtinModules.includes(name)\n    if (internal) return { internal: name }\n    const isLib = checkIfLib(name)\n    if (isLib) {\n      try {\n        const { path: entry } = await resolveDependency(name, path)\n        return { entry, package: pckg }\n      } catch (err) { /*\n        maybe a local package with package.json\n      */}\n    } else {\n      const { name: n, paths } = split(name)\n      if (paths) {\n        const { packageJson, packageName } = await findPackageJson(dir, n)\n        const d = dirname(packageJson)\n        const { path: entry } = await resolveDependency(join(d, paths))\n        return { entry, package: packageName }\n      }\n    }\n    try {\n      const {\n        entry, packageJson, version, packageName, hasMain, ...rest\n      } = await findPackageJson(dir, name, { fields })\n      if (packageName == pckg) {\n        console.warn('[static-analysis] Skipping package %s that imports itself in %s', packageName, path)\n        return null\n      }\n      return {\n        entry, packageJson, version, name: packageName,\n        ...(hasMain ? { hasMain } : {}),\n        ...rest }\n    } catch (err) {\n      if (soft) return null\n      throw e(err)\n    }\n  })\n  return (await Promise.all(proms)).filter(Boolean)\n}\n\n/**\n * Detects the imports.\n * @param {string} path\n * @param {Object} cache\n * @returns {!Promise<!Array<!_staticAnalysis.Detection>>}\n */\nexport const detect = async (path, cache = {}, {\n  nodeModules = true, shallow = false, soft = false, fields = [],\n  package: pckg } = {}) => {\n  if (path in cache) return []\n  cache[path] = 1\n  const source = await read(path)\n  const matches = getMatches(source)\n  const requireMatches = getRequireMatches(source)\n  const fm = nodeModules ? matches : matches.filter(checkIfLib)\n  const fr = nodeModules ? requireMatches : requireMatches.filter(checkIfLib)\n\n  let deps\n  try {\n    const dm = await getDependenciesMeta(path, fm, soft, fields, pckg)\n    const rm = await getDependenciesMeta(path, fr, soft, fields, pckg)\n    rm.forEach((val) => {\n      val.required = true\n    })\n    deps = [...dm, ...rm]\n  } catch (err) {\n    err.message = `${path}\\n [!] ${err.message}`\n    throw err\n  }\n  const d = deps.map(o => ({ ...o, from: path }))\n  const entries = deps\n    .filter(({ entry }) => entry && !(entry in cache))\n  const discovered = await entries\n    .reduce(async (acc, {\n      entry, hasMain, packageJson, name, package: p }) => {\n      if (packageJson && shallow) return acc\n      const accRes = await acc\n      const res = await detect(entry, cache, { nodeModules, shallow, soft, fields, package: name || p })\n      const r = res\n        .map(o => ({\n          ...o,\n          from: o.from ? o.from : entry,\n          ...(!o.packageJson && hasMain ? { hasMain } : {}),\n        }))\n      return [...accRes, ...r]\n    }, d)\n  return discovered\n}\n\nexport const getRequireMatches = (source) => {\n  const m = mismatch(/(?:^|[^\\w\\d_])require\\(\\s*(['\"])(.+?)\\1\\s*\\)/gm, source, ['q', 'from'])\n  const res = m.map(a => a['from'])\n  return res\n}\n\n/**\n * @suppress {nonStandardJsDocs}\n * @typedef {import('.').Detection} _staticAnalysis.Detection\n */\n/**\n * @suppress {nonStandardJsDocs}\n * @typedef {import('.').DependencyMeta} _staticAnalysis.DependencyMeta\n */","/**\n * Splits the package name possibly with scope and returns the name and the\n * path within that page that was required.\n * @param {string} from The package, e.g., `@depack/depack/src`, or `depack`.\n */\nconst split = (from) => {\n  let [scope, name, ...paths] = from.split('/')\n  if (!scope.startsWith('@') && name) {\n    paths = [name, ...paths]\n    name = scope\n  } else if (!scope.startsWith('@')) {\n    name = scope\n  } else {\n    name = `${scope}/${name}`\n  }\n  return { name, paths: paths.join('/') }\n}\n\nexport default split","import resolveDependency from 'resolve-dependency'\nimport erotic from 'erotic'\nimport { detect } from './lib'\n\n/**\n * Detects all dependencies in a file and their dependencies recursively.\n * @param {string} path The path to the file in which to detect dependencies.\n * @param {!_staticAnalysis.Config} [config] The configuration options for `staticAnalysis`.\n * @param {boolean} [config.nodeModules=true] Whether to include packages from `node_modules` in the output. Default `true`.\n * @param {boolean} [config.shallow=false] Only report on the entries of `node_module` dependencies, without analysing their own dependencies. Default `false`.\n * @param {boolean} [config.soft=false] Do not throw an error when the dependency cannot be found in `node_modules`. Default `false`.\n * @param {!Array<string>} [config.fields] Any additional fields from `package.json` files to return.\n * @return {!Promise<!Array<!_staticAnalysis.Detection>>} The array with detections.\n */\nconst staticAnalysis = async (path, config = {}) => {\n  const e = erotic()\n  const { path: p } = await resolveDependency(path)\n  const {\n    nodeModules = true,\n    shallow = false,\n    soft = false,\n    fields = [],\n  } = config\n  let detected\n  try {\n    detected = await detect(p, {}, {\n      nodeModules, shallow, soft, fields })\n  } catch (err) {\n    throw e(err)\n  }\n  const filtered = detected.filter(({ internal, entry }, i) => {\n    if (internal) {\n      const fi = detected.findIndex(({ internal: ii }) => {\n        return ii == internal\n      })\n      return fi == i\n    }\n    const ei = detected.findIndex(({ entry: ee }) => {\n      return entry == ee\n    })\n    return ei == i\n  })\n  const f = filtered.map((ff) => {\n    const { entry, internal } = ff\n    const froms = detected\n      .filter(({ internal: i, entry: ee }) => {\n        if (internal) return internal == i\n        if (entry) return entry == ee\n      })\n      .map(({ from }) => from)\n      .filter((el, i, a) => a.indexOf(el) == i)\n    const newF =  { ...ff, from: froms }\n    return newF\n  })\n    .map(({ package: pckg, ...props }) => {\n      if (pckg) return { package: pckg, ...props }\n      return props\n    })\n  return f\n}\n\n/**\n * Sorts the detected dependencies into commonJS modules, packageJsons and internals.\n * @param {!Array<!_staticAnalysis.Detection>} detected The detected matches\n */\nexport const sort = (detected) => {\n  const packageJsons = []\n  const commonJsPackageJsons = []\n  const commonJs = []\n  const js = []\n  const internals = []\n  const deps = []\n  detected\n    .forEach(({ packageJson, hasMain, name, entry, internal }) => {\n      if (internal) return internals.push(internal)\n\n      if (packageJson && hasMain)\n        commonJsPackageJsons.push(packageJson)\n      else if (packageJson) packageJsons.push(packageJson)\n      if (entry && hasMain) commonJs.push(entry)\n      else if (entry) js.push(entry)\n      if (name) deps.push(name)\n    })\n  return { commonJsPackageJsons,\n    packageJsons, commonJs, js, internals, deps }\n}\n\nexport default staticAnalysis\n\n/* documentary types/index.xml */\n/**\n * @suppress {nonStandardJsDocs}\n * @typedef {_staticAnalysis.Config} Config The configuration options for `staticAnalysis`.\n */\n/**\n * @suppress {nonStandardJsDocs}\n * @typedef {Object} _staticAnalysis.Config The configuration options for `staticAnalysis`.\n * @prop {boolean} [nodeModules=true] Whether to include packages from `node_modules` in the output. Default `true`.\n * @prop {boolean} [shallow=false] Only report on the entries of `node_module` dependencies, without analysing their own dependencies. Default `false`.\n * @prop {boolean} [soft=false] Do not throw an error when the dependency cannot be found in `node_modules`. Default `false`.\n * @prop {!Array<string>} [fields] Any additional fields from `package.json` files to return.\n */\n/**\n * @suppress {nonStandardJsDocs}\n * @typedef {_staticAnalysis.Detection} Detection The module detection result.\n */\n/**\n * @suppress {nonStandardJsDocs}\n * @typedef {Object} _staticAnalysis.Detection The module detection result.\n * @prop {string} [entry] The path to the JavaScript file to be required. If an internal Node.js package is required, it's name is found in the `internal` field.\n * @prop {!Array<string>} from The file in which the dependency was found.\n * @prop {string} [packageJson] The path to the `package.json` file of the dependency if it's a module.\n * @prop {string} [name] The name of the package.\n * @prop {string} [version] The version of the package.\n * @prop {string} [internal] If it's an internal NodeJS dependency, such as `fs` or `path`, contains its name.\n * @prop {boolean} [hasMain] Whether the entry from the package was specified via the `main` field and not `module` field.\n * @prop {string} [package] If the entry is a library file withing a package, this field contains its name. Same as the `name` field for the _main/module_ entries.\n * @prop {boolean} [required] Whether the package was required using the `require` statement.\n */\n/**\n * @suppress {nonStandardJsDocs}\n * @typedef {_staticAnalysis.DependencyMeta} DependencyMeta\n */\n/**\n * @suppress {nonStandardJsDocs}\n * @typedef {Object} _staticAnalysis.DependencyMeta\n * @prop {string} [internal] The name of the internal Node.JS package.\n * @prop {string} [packageJson] The location of the _package.json_ file.\n * @prop {string} [entry] The entry to the package (module or main fields).\n * @prop {string} [package] The package the entry belongs to.\n * @prop {boolean} [hasMain] Whether the dependency has main field.\n * @prop {boolean} [required] Whether the dependency was required.\n */\n","import staticAnalysis from 'static-analysis'\nimport resolveDependency from 'resolve-dependency'\nimport { c } from 'erte'\nimport { lstat } from 'fs'\nimport makePromise from 'makepromise'\n\nexport const compareHash = (currentHash, hash, log = console.log) => {\n  const added = []\n  const removed = []\n  hash.forEach((mm) => {\n    if (!currentHash.includes(mm)) {\n      added.push(mm)\n    }\n  })\n  currentHash.forEach((mm) => {\n    if (!hash.includes(mm)) {\n      removed.push(mm)\n    }\n  })\n  const changed = added.length || removed.length\n\n  if (!changed) return true\n  added.forEach((mm) => {\n    const { entry, mmeta } = getMetaToPrint(mm)\n    log(c('+', 'green'), entry, mmeta)\n  })\n  removed.forEach((mm) => {\n    const { entry, mmeta } = getMetaToPrint(mm)\n    log(c('-', 'red'), entry, mmeta)\n  })\n  return false\n}\n\nconst getMetaToPrint = (mm) => {\n  const [entry, meta] = mm.split(' ')\n  let mmeta = ''\n  if (meta) {\n    mmeta = /^\\d+$/.test(meta) ? new Date(parseInt(meta, 10)).toLocaleString() : meta\n  }\n  return { entry, mmeta }\n}\n\nexport const getMtime = async (entry) => {\n  const stat = /** @type {!fs.Stats} */ (await makePromise(lstat, entry))\n  const mtime = stat.mtime\n  return mtime.getTime()\n}\n\nexport const computeHash = async (analysis) => {\n  const hash = await Promise.all(analysis.map(async ({ entry, name, internal, version }) => {\n    if (name) return `${name} ${version}`\n    if (internal) return internal\n    const mtime = await getMtime(entry)\n    return `${entry} ${mtime}`\n  }))\n  return hash\n}\n\n\nexport const analyse = async (mod) => {\n  const analysis = await staticAnalysis(mod, {\n    shallow: true,\n    soft: true,\n  })\n  const hash = await computeHash(analysis)\n\n  const { path: mmod } = await resolveDependency(mod)\n  const mmtime = await getMtime(mmod)\n\n  return { mtime: mmtime, hash, analysis }\n}\n\n/**\n * @suppress {nonStandardJsDocs}\n * @typedef {import('fs').Stats} fs.Stats\n */","import Diff from './diff'\n\nconst colors = {\n  'black': 30,\n  'red': 31,\n  'green': 32,\n  'yellow': 33,\n  'blue': 34,\n  'magenta': 35,\n  'cyan': 36,\n  'white': 37,\n  'grey': 90,\n}\n\nconst backgroundColors = {\n  'black': 40,\n  'red': 41,\n  'green': 42,\n  'yellow': 43,\n  'blue': 44,\n  'magenta': 45,\n  'cyan': 46,\n  'white': 47,\n}\n\n/**\n * Color the foreground.\n * @param {string} string The string to color.\n * @param {_erte.Color} color The color to apply.\n */\nexport function c(string, color) {\n  const cc = colors[color]\n  if (!cc) return string\n  return `\\x1b[${cc}m${string}\\x1b[0m`\n}\n\n/**\n * Color the background.\n * @param {string} string The string to color.\n * @param {_erte.Color} color The color to apply.\n */\nexport function b(string, color) {\n  const cc = backgroundColors[color]\n  if (!cc) return string\n  return `\\x1b[${cc}m${string}\\x1b[0m`\n}\n\n/**\n * Compares two strings and outputs a coloured version where strings don't match.\n * @param {string} source A string to compare.\n * @param {string} target Target string to compare with.\n * @returns {string} A string which uses shell-codes to highligh differences.\n */\nexport default function erte(source, target) {\n  const diff = new Diff()\n  const d = diff.diff(source, target)\n  const m = d.map(({ added, removed, value }) => {\n    let p\n    const s = value.split(' ')\n    if (added) {\n      p = s.map(t => {\n        return t.replace(/\\n$/mg, '\u23ce\\n')\n      }).map(t => c(t, 'green')).join(b(' ', 'green'))\n    } else if (removed) {\n      p = s.map(t => {\n        return t.replace(/\\n$/mg, '\u23ce\\n')\n      }).map(t => c(t, 'red')).join(b(' ', 'red'))\n    } else {\n      p = c(value, 'grey')\n    }\n    return p\n  })\n  const s = m.join('')\n  return s\n}\n\n/* documentary types/index.xml */\n/**\n * @suppress {nonStandardJsDocs}\n * @typedef {_erte.Color} Color The color to apply.\n */\n/**\n * @suppress {nonStandardJsDocs}\n * @typedef {('black'|'red'|'green'|'yellow'|'blue'|'magenta'|'cyan'|'white'|'grey')} _erte.Color The color to apply.\n */\n","import '../types/externs'\nimport cache from './'\n\nmodule.exports = cache","import { createHash } from 'crypto'\nimport { compareHash, analyse } from './lib'\n\n/**\n * Computes Necessary Information To Cache A Module, And Allows To Check If It Has Been Updated.\n * @param {string} mod The path to the module to look into.\n * @param {_depack.Cache} cache The current cache.\n * @param {!Function} [log] The function to use to print updated bits of hash, such as sources.\n */\nconst compare = async (mod, cache = {}, log = console.log) => {\n  const current = cache[mod]\n  const { mtime, hash } = await analyse(mod)\n\n  const md5 = createHash('md5').update(JSON.stringify(hash)).digest(\"hex\")\n\n  if (!current) return {\n    result: false, reason: 'NO_CACHE', mtime, hash, md5,\n  }\n\n  const {\n    'mtime': currentMtime,\n    'hash': currentHash,\n  } = current\n\n  if (mtime != currentMtime) return {\n    result: false, reason: 'MTIME_CHANGE', mtime, hash, currentMtime, md5,\n  }\n  const isHashSame = compareHash(currentHash, hash, log)\n  if (isHashSame ) return { result: true, md5 }\n\n\n  return { result: false, mtime, hash, reason: 'HASH_CHANGE', md5 }\n}\n\nexport default compare\n\n/**\n * @suppress {nonStandardJsDocs}\n * @typedef {import('..').Cache} _depack.Cache \n */"],
"names":["createHash","_crypto","getStackSegment","stack","from","oneLine","splitStack","split","undefined","item","length","slice","items","join","getEntryStack","transparent","stackSegment","getCallerFromArguments","args","caller","homedir","os","extractPathRegex","pathRegex","homeDir","cleanStack","pretty","ignoredModules","j","re","RegExp","source","replace","filter","x","pathMatches","match","includes","test","trim","map","m","p1","makeCallback","entryCaller","entryStack","shadow","cb","messageOrError","arguments","errorStack","Error","calleeStackLine","message","isError","stackMessage","stackHeading","Object","assign","e","properties","erotic","checkArgumentIndex","i","makePromise","fn","resolveValue","er","fnLength","res","Promise","resolve","reject","err","error","allArgs","Array","isArray","forEach","arg","createReadStream","lstat","fs","exists","path","ls","dirname","relative","resolveDependency","relativeFrom","d","isDir","checkSources","isDirectory","fileChecked","fileRes","endsWith","s","startsWith","pp","builtinModules","_module","Writable","stream","pipeError","streamA","streamB","once","emit","Catchment","options","binary","rs","opts","proxyError","wrap","_","_caughtData","_promise","r","on","Buffer","concat","indexOf","pipe","chunk","encoding","callback","push","collect","readable","promise","read","mismatch","string","keys","o","p","reduce","acc","capturedGroup","key","start","RE","RE2","RE3","RE4","getMatches","a","findPackageJson","dir","name","fields","soft","fold","findEntry","entryExists","main","entry","version","packageName","rest","result","packageJson","hasMain","f","mod","JSON","parse","current","resolved","indexExists","checkIfLib","modName","getDependenciesMeta","matches","pckg","proms","internal","isLib","package","scope","paths","n","console","warn","all","Boolean","detect","cache","nodeModules","shallow","requireMatches","getRequireMatches","fm","fr","deps","dm","rm","val","required","discovered","entries","accRes","staticAnalysis","config","detected","filtered","findIndex","fi","ii","ei","ee","ff","froms","el","newF","props","colors","c","color","cc","compareHash","currentHash","hash","log","added","removed","mm","mmeta","getMetaToPrint","meta","toLocaleString","Date","parseInt","getMtime","mtime","stat","getTime","computeHash","analysis","analyse","mmod","mmtime","module","exports","compare","md5","update","stringify","digest","reason","currentMtime","isHashSame"]
}
